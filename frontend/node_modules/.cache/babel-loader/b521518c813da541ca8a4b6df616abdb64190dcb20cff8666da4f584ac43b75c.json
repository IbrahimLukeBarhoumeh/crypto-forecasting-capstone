{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeb\\\\crypto-forecasting-capstone\\\\frontend\\\\src\\\\CMCMarketData.jsx\",\n  _s = $RefreshSig$();\n// file: frontend/src/CMCMarketData.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CMCMarketData() {\n  _s();\n  const [coins, setCoins] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/market_data\").then(resp => {\n      if (!resp.ok) {\n        throw new Error(\"Failed to fetch /api/market_data\");\n      }\n      return resp.json();\n    }).then(data => {\n      if (data.status === \"ok\") {\n        setCoins(data.coins || []);\n      } else {\n        setError(data.msg || \"Error returned from server\");\n      }\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n\n  // generate random sparkline data as placeholder\n  function randomSparklineData() {\n    const arr = [];\n    for (let i = 0; i < 8; i++) {\n      arr.push(Math.random() * 100);\n    }\n    return arr;\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"CMC Top 10 Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger fw-bold\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Trend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: coins.map((coin, idx) => {\n            const quote = coin.quote.USD;\n            // random placeholder for sparkline\n            const sparkData = randomSparklineData();\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: coin.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: coin.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", quote.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", quote.market_cap.toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: \"100px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Sparklines, {\n                  data: sparkData,\n                  width: 100,\n                  height: 30,\n                  children: /*#__PURE__*/_jsxDEV(SparklinesLine, {\n                    color: \"green\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, coin.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CMCMarketData, \"em9M+nnpQ5UXWVeDBhg6bM7PJco=\");\n_c = CMCMarketData;\nexport default CMCMarketData;\nvar _c;\n$RefreshReg$(_c, \"CMCMarketData\");","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Sparklines","SparklinesLine","jsxDEV","_jsxDEV","CMCMarketData","_s","coins","setCoins","error","setError","fetch","then","resp","ok","Error","json","data","status","msg","catch","err","message","randomSparklineData","arr","i","push","Math","random","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","className","bordered","hover","responsive","map","coin","idx","quote","USD","sparkData","name","symbol","price","toFixed","market_cap","toLocaleString","style","width","height","color","id","_c","$RefreshReg$"],"sources":["C:/Users/lukeb/crypto-forecasting-capstone/frontend/src/CMCMarketData.jsx"],"sourcesContent":["// file: frontend/src/CMCMarketData.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Card, Table } from \"react-bootstrap\";\r\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\r\n\r\nfunction CMCMarketData() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/market_data\")\r\n      .then(resp => {\r\n        if (!resp.ok) {\r\n          throw new Error(\"Failed to fetch /api/market_data\");\r\n        }\r\n        return resp.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status === \"ok\") {\r\n          setCoins(data.coins || []);\r\n        } else {\r\n          setError(data.msg || \"Error returned from server\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err.message);\r\n      });\r\n  }, []);\r\n\r\n  // generate random sparkline data as placeholder\r\n  function randomSparklineData() {\r\n    const arr = [];\r\n    for (let i=0; i<8; i++){\r\n      arr.push(Math.random() * 100);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>CMC Top 10 Listing</Card.Title>\r\n        {error && <p className=\"text-danger fw-bold\">{error}</p>}\r\n\r\n        <Table bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Symbol</th>\r\n              <th>Price (USD)</th>\r\n              <th>Market Cap</th>\r\n              <th>Trend</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {coins.map((coin, idx) => {\r\n              const quote = coin.quote.USD;\r\n              // random placeholder for sparkline\r\n              const sparkData = randomSparklineData();\r\n\r\n              return (\r\n                <tr key={coin.id}>\r\n                  <td>{idx + 1}</td>\r\n                  <td>{coin.name}</td>\r\n                  <td>{coin.symbol}</td>\r\n                  <td>${quote.price.toFixed(2)}</td>\r\n                  <td>${quote.market_cap.toLocaleString()}</td>\r\n                  <td style={{ width:\"100px\" }}>\r\n                    <Sparklines data={sparkData} width={100} height={30}>\r\n                      <SparklinesLine color=\"green\" />\r\n                    </Sparklines>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CMCMarketData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}