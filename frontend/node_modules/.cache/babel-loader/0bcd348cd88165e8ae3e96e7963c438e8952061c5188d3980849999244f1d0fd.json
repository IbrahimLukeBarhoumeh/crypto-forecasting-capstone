{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeb\\\\crypto-forecasting-capstone\\\\frontend\\\\src\\\\PredictForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictForm = () => {\n  _s();\n  const [coin, setCoin] = useState(\"ADA\");\n  const [horizon, setHorizon] = useState(\"7\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [resultMsg, setResultMsg] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResultMsg(\"\");\n    setErrorMsg(\"\");\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          coin,\n          horizon,\n          cmc_api_key: apiKey\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        // That means HTTP status >= 400\n        // Show stdout/stderr if present\n        let combinedErr = `Error: ${data.error || 'unknown'}`;\n        if (data.stdout || data.stderr) {\n          combinedErr += \"\\n\\nSTDOUT:\\n\" + (data.stdout || \"\") + \"\\n\\nSTDERR:\\n\" + (data.stderr || \"\");\n        }\n        setErrorMsg(combinedErr);\n      } else {\n        // success => show the \"prediction\" line or full stdout\n        setResultMsg(data.prediction || \"Got successful response, see console...\");\n        console.log(\"Success data:\", data);\n      }\n    } catch (err) {\n      setErrorMsg(\"Fetch error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crypto Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Coin\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: coin,\n          onChange: e => setCoin(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ADA\",\n            children: \"ADA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cardano\",\n            children: \"Cardano\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BTC\",\n            children: \"BTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dogecoin\",\n            children: \"DOGE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Horizon (days)\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: horizon,\n          onChange: e => setHorizon(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CMC API Key:\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), resultMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: resultMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictForm, \"3MJB7Dr5o+xkcWtOrwK1Ad4r60A=\");\n_c = PredictForm;\nexport default PredictForm;\nvar _c;\n$RefreshReg$(_c, \"PredictForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PredictForm","_s","coin","setCoin","horizon","setHorizon","apiKey","setApiKey","resultMsg","setResultMsg","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","resp","fetch","method","headers","body","JSON","stringify","cmc_api_key","data","json","ok","combinedErr","error","stdout","stderr","prediction","console","log","err","message","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","color","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/lukeb/crypto-forecasting-capstone/frontend/src/PredictForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PredictForm = () => {\r\n  const [coin, setCoin] = useState(\"ADA\");\r\n  const [horizon, setHorizon] = useState(\"7\");\r\n  const [apiKey, setApiKey] = useState(\"\");\r\n  const [resultMsg, setResultMsg] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setResultMsg(\"\");\r\n    setErrorMsg(\"\");\r\n\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/predict\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          coin,\r\n          horizon,\r\n          cmc_api_key: apiKey\r\n        }),\r\n      });\r\n\r\n      const data = await resp.json();\r\n\r\n      if (!resp.ok) {\r\n        // That means HTTP status >= 400\r\n        // Show stdout/stderr if present\r\n        let combinedErr = `Error: ${data.error || 'unknown'}`;\r\n        if (data.stdout || data.stderr) {\r\n          combinedErr += \"\\n\\nSTDOUT:\\n\" + (data.stdout || \"\") + \"\\n\\nSTDERR:\\n\" + (data.stderr || \"\");\r\n        }\r\n        setErrorMsg(combinedErr);\r\n      } else {\r\n        // success => show the \"prediction\" line or full stdout\r\n        setResultMsg(data.prediction || \"Got successful response, see console...\");\r\n        console.log(\"Success data:\", data);\r\n      }\r\n\r\n    } catch (err) {\r\n      setErrorMsg(\"Fetch error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"20px\" }}>\r\n      <h2>Crypto Prediction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Coin&nbsp;</label>\r\n          <select value={coin} onChange={(e) => setCoin(e.target.value)}>\r\n            <option value=\"ADA\">ADA</option>\r\n            <option value=\"Cardano\">Cardano</option>\r\n            <option value=\"BTC\">BTC</option>\r\n            <option value=\"Dogecoin\">DOGE</option>\r\n            {/* add more synonyms here */}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Horizon (days)&nbsp;</label>\r\n          <input\r\n            type=\"number\"\r\n            value={horizon}\r\n            onChange={(e) => setHorizon(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>CMC API Key:&nbsp;</label>\r\n          <input\r\n            type=\"text\"\r\n            value={apiKey}\r\n            onChange={(e) => setApiKey(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Predict</button>\r\n      </form>\r\n\r\n      {resultMsg && (\r\n        <p style={{ color: \"green\", whiteSpace: \"pre-wrap\" }}>\r\n          {resultMsg}\r\n        </p>\r\n      )}\r\n      {errorMsg && (\r\n        <p style={{ color: \"red\", whiteSpace: \"pre-wrap\" }}>\r\n          {errorMsg}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EAC3C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MACF,MAAMI,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBnB,IAAI;UACJE,OAAO;UACPkB,WAAW,EAAEhB;QACf,CAAC;MACH,CAAC,CAAC;MAEF,MAAMiB,IAAI,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,CAAC;MAE9B,IAAI,CAACT,IAAI,CAACU,EAAE,EAAE;QACZ;QACA;QACA,IAAIC,WAAW,GAAG,UAAUH,IAAI,CAACI,KAAK,IAAI,SAAS,EAAE;QACrD,IAAIJ,IAAI,CAACK,MAAM,IAAIL,IAAI,CAACM,MAAM,EAAE;UAC9BH,WAAW,IAAI,eAAe,IAAIH,IAAI,CAACK,MAAM,IAAI,EAAE,CAAC,GAAG,eAAe,IAAIL,IAAI,CAACM,MAAM,IAAI,EAAE,CAAC;QAC9F;QACAlB,WAAW,CAACe,WAAW,CAAC;MAC1B,CAAC,MAAM;QACL;QACAjB,YAAY,CAACc,IAAI,CAACO,UAAU,IAAI,yCAAyC,CAAC;QAC1EC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,IAAI,CAAC;MACpC;IAEF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZtB,WAAW,CAAC,eAAe,GAAGsB,GAAG,CAACC,OAAO,CAAC;IAC5C;EACF,CAAC;EAED,oBACEnC,OAAA;IAAKoC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7BtC,OAAA;MAAAsC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1C,OAAA;MAAM2C,QAAQ,EAAE9B,YAAa;MAAAyB,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzB1C,OAAA;UAAQ4C,KAAK,EAAEzC,IAAK;UAAC0C,QAAQ,EAAG/B,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;UAAAN,QAAA,gBAC5DtC,OAAA;YAAQ4C,KAAK,EAAC,KAAK;YAAAN,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChC1C,OAAA;YAAQ4C,KAAK,EAAC,SAAS;YAAAN,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC1C,OAAA;YAAQ4C,KAAK,EAAC,KAAK;YAAAN,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChC1C,OAAA;YAAQ4C,KAAK,EAAC,UAAU;YAAAN,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC1C,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbH,KAAK,EAAEvC,OAAQ;UACfwC,QAAQ,EAAG/B,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACgC,MAAM,CAACF,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAO;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjC1C,OAAA;UACE+C,IAAI,EAAC,MAAM;UACXH,KAAK,EAAErC,MAAO;UACdsC,QAAQ,EAAG/B,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACgC,MAAM,CAACF,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAENjC,SAAS,iBACRT,OAAA;MAAGoC,KAAK,EAAE;QAAEY,KAAK,EAAE,OAAO;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAX,QAAA,EAClD7B;IAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACJ,EACA/B,QAAQ,iBACPX,OAAA;MAAGoC,KAAK,EAAE;QAAEY,KAAK,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAX,QAAA,EAChD3B;IAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CA3FID,WAAW;AAAAiD,EAAA,GAAXjD,WAAW;AA6FjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}